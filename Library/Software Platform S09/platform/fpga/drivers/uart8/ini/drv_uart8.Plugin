[Plugin]
Name=drv_uart8
Description=UART Serial Port Driver
Caption=UART Serial Port Driver
SourceDir=platform\fpga\drivers\uart8\src
CompileOption0=-I"$(SSASROOT)\platform\fpga\drivers\uart8\internal"
InitHandler=
InitHandlerPriority=16
Implement=drv_uart8
MinInstances=1
Bitmap=drv_uart8.bmp

[Available_If0]
kind=PLUGIN
Object=per_uart8
Condition=EQ

[Instance]
Require0=per_uart8

[Instance_Option0]
Name=baudrate
Description=Baudrate
Kind=UINT32
DefaultValue=19200

[Instance_Option1]
Name=handshake
Description=Handshaking modes
Kind=ENUM
DefaultValue=NONE
Enum0=NONE
EnumDescription0=No handshaking is used
Enum1=RTSHARD
EnumDescription1=Core handles RTS/CTS handshaking, margin is defined by core
Enum2=RTSSOFT
EnumDescription2=Software handles RTS/CTS handshaking, RX_BUFFER and RX_MARGIN must be set

[Instance_Option2]
Name=tx_buffer
Description=Transmitter software buffer size (bytes), if 0 use core buffer without interrupts
Kind=BUFFER
Type=UINT8
MinRange=0
DefaultValue=128

[Instance_Option3]
Name=tx_blocking
Description=Write behavior when no space in buffer (False = abort, True = keep on trying)
Kind=BOOLEAN
DefaultValue=True

[Instance_Option3_Available_If0]
Kind=INTERFACE
Object=posix_threads
Condition=NOTEQ

[Instance_Option4]
Name=tx_blocking_mode
Description=Write behavior when no space in buffer (NONE = abort, LOOP = keep on trying, POLL = ask every RX_POLLMS, YIELD = yield to scheduler, NOTIFY = wait for interrupt notification)
Kind=ENUM
DefaultValue=YIELD
Enum0=NONE
Enum1=LOOP
Enum2=POLL
Enum3=YIELD
Enum4=NOTIFY

[Instance_Option4_Available_If0]
Kind=INTERFACE
Object=posix_threads
Condition=EQ

[Instance_Option4_Available_If1]
Kind=False

[Instance_Option5]
Name=tx_pollmscs
Description=Write polling time (mscs) when using POLL
Kind=UINT32
DefaultValue=200
MinRange=100
MaxRange=1000

[Instance_Option5_Available_If0]
Kind=INTERFACE
Object=posix_threads
Condition=EQ

[Instance_Option5_Available_If1]
Kind=False

[Instance_Option6]
Name=rx_buffer
Description=Receiver software buffer size (bytes), if 0 use core buffer without interrupts
Kind=BUFFER
Type=UINT8
MinRange=0
DefaultValue=128

[Instance_Option7]
Name=rx_margin
Description=Software buffer margin for handshaking, must be smaller than size of RX_BUFFER
Kind=INT32
MinRange=0
DefaultValue=16

[Instance_Option7_Hide_If0]
Kind=OPTION
Object=handshake
Condition=NOTEQ
Value=RTSSOFT

[Instance_Option8]
Name=rx_blocking
Description=Read behavior when no data in buffer (False = abort, True = keep on trying)
Kind=BOOLEAN
DefaultValue=True

[Instance_Option8_Available_If0]
Kind=INTERFACE
Object=posix_threads
Condition=NOTEQ

[Instance_Option9]
Name=rx_blocking_mode
Description=Read behavior when no data in buffer (NONE = abort, LOOP = keep on trying, POLL = ask every RX_POLLMS, YIELD = yield to scheduler, NOTIFY = wait for interrupt notification)
Kind=ENUM
DefaultValue=YIELD
Enum0=NONE
Enum1=LOOP
Enum2=POLL
Enum3=YIELD
Enum4=NOTIFY

[Instance_Option9_Available_If0]
Kind=INTERFACE
Object=posix_threads
Condition=EQ

[Instance_Option9_Available_If1]
Kind=False

[Instance_Option10]
Name=rx_pollmscs
Description=Read polling time (mscs) when using POLL
Kind=UINT32
DefaultValue=200
MinRange=100
MaxRange=1000

[Instance_Option10_Available_If0]
Kind=INTERFACE
Object=posix_threads
Condition=EQ

[Instance_Option10_Available_If1]
Kind=False

[Instance_Option11]
name=tx_interrupt_value
Description=Inherited from hardware wrapper. If the interrupt is not connected (value is -1) the transmitter software buffer size should be 0. 
NoGenerate=True
Kind=INT8
MinRange=-1
MaxRange=31
AutoValue=per_uart8.interrupt0

[Instance_Option12]
name=rx_interrupt_value
Description=Inherited from hardware wrapper. If the interrupt is not connected (value is -1) the receiver software buffer size should be 0. 
NoGenerate=True
Kind=INT8
MinRange=-1
MaxRange=31
AutoValue=per_uart8.interrupt1
